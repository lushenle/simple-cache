// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: cache.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_cache_proto protoreflect.FileDescriptor

var file_cache_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x09, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x73, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x9c, 0x07,
	0x0a, 0x0c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84,
	0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x92, 0x41, 0x46, 0x0a, 0x05, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x13, 0x47, 0x65, 0x74, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x1a, 0x23, 0x55, 0x53, 0x65, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x61, 0x70, 0x69, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x61, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x2a, 0x03, 0x67,
	0x65, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6b,
	0x65, 0x79, 0x3d, 0x2a, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f,
	0x92, 0x41, 0x46, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x13, 0x53, 0x65, 0x74, 0x20,
	0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x1a,
	0x23, 0x55, 0x53, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x70, 0x69, 0x20, 0x74, 0x6f,
	0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x62, 0x79, 0x20,
	0x6b, 0x65, 0x79, 0x2e, 0x2a, 0x03, 0x73, 0x65, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a,
	0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x3d, 0x2a, 0x7d, 0x12,
	0x8a, 0x01, 0x0a, 0x03, 0x44, 0x65, 0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x92, 0x41, 0x4c, 0x0a, 0x05, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x62, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x1a, 0x26, 0x55, 0x53,
	0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x70, 0x69, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x62, 0x79, 0x20,
	0x6b, 0x65, 0x79, 0x2e, 0x2a, 0x03, 0x64, 0x65, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x2a,
	0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x3d, 0x2a, 0x7d, 0x12, 0x7e, 0x0a, 0x05,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x92, 0x41, 0x42, 0x0a,
	0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x1a, 0x20, 0x55, 0x53, 0x65, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x61, 0x70, 0x69, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x2a, 0x05, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x05, 0x2a, 0x03, 0x2f, 0x76, 0x31, 0x12, 0xd3, 0x01, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1,
	0x01, 0x92, 0x41, 0x4f, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x2e, 0x1a, 0x26, 0x55, 0x53, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x70,
	0x69, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x73,
	0x20, 0x62, 0x79, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2e, 0x2a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x5a, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x3d, 0x2a, 0x7d, 0x5a, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x7b, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x3d, 0x2a, 0x7d, 0x2f, 0x7b, 0x6d,
	0x6f, 0x64, 0x65, 0x3d, 0x2a, 0x7d, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x97, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x92,
	0x41, 0x40, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x0d, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x1a, 0x1d, 0x55, 0x53, 0x65, 0x20, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x61, 0x70, 0x69, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x2e, 0x2a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6b,
	0x65, 0x79, 0x3d, 0x2a, 0x7d, 0x2f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x42, 0x86, 0x01, 0x92,
	0x41, 0x5a, 0x12, 0x58, 0x0a, 0x10, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x3c, 0x0a, 0x09, 0x53, 0x68, 0x65, 0x6e, 0x6c, 0x65,
	0x20, 0x4c, 0x75, 0x12, 0x1b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x6c, 0x65,
	0x1a, 0x12, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x6c, 0x65, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x6c,
	0x65, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_cache_proto_goTypes = []any{
	(*GetRequest)(nil),        // 0: pb.GetRequest
	(*SetRequest)(nil),        // 1: pb.SetRequest
	(*DelRequest)(nil),        // 2: pb.DelRequest
	(*ResetRequest)(nil),      // 3: pb.ResetRequest
	(*SearchRequest)(nil),     // 4: pb.SearchRequest
	(*ExpireKeyRequest)(nil),  // 5: pb.ExpireKeyRequest
	(*GetResponse)(nil),       // 6: pb.GetResponse
	(*SetResponse)(nil),       // 7: pb.SetResponse
	(*DelResponse)(nil),       // 8: pb.DelResponse
	(*ResetResponse)(nil),     // 9: pb.ResetResponse
	(*SearchResponse)(nil),    // 10: pb.SearchResponse
	(*ExpireKeyResponse)(nil), // 11: pb.ExpireKeyResponse
}
var file_cache_proto_depIdxs = []int32{
	0,  // 0: pb.CacheService.Get:input_type -> pb.GetRequest
	1,  // 1: pb.CacheService.Set:input_type -> pb.SetRequest
	2,  // 2: pb.CacheService.Del:input_type -> pb.DelRequest
	3,  // 3: pb.CacheService.Reset:input_type -> pb.ResetRequest
	4,  // 4: pb.CacheService.Search:input_type -> pb.SearchRequest
	5,  // 5: pb.CacheService.ExpireKey:input_type -> pb.ExpireKeyRequest
	6,  // 6: pb.CacheService.Get:output_type -> pb.GetResponse
	7,  // 7: pb.CacheService.Set:output_type -> pb.SetResponse
	8,  // 8: pb.CacheService.Del:output_type -> pb.DelResponse
	9,  // 9: pb.CacheService.Reset:output_type -> pb.ResetResponse
	10, // 10: pb.CacheService.Search:output_type -> pb.SearchResponse
	11, // 11: pb.CacheService.ExpireKey:output_type -> pb.ExpireKeyResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cache_proto_init() }
func file_cache_proto_init() {
	if File_cache_proto != nil {
		return
	}
	file_get_proto_init()
	file_set_proto_init()
	file_del_proto_init()
	file_reset_proto_init()
	file_search_proto_init()
	file_expire_key_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cache_proto_goTypes,
		DependencyIndexes: file_cache_proto_depIdxs,
	}.Build()
	File_cache_proto = out.File
	file_cache_proto_rawDesc = nil
	file_cache_proto_goTypes = nil
	file_cache_proto_depIdxs = nil
}
